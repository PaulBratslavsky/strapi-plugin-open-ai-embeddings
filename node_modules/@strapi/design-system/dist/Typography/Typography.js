import r from "styled-components";
import { variantStyle as i, ellipsisStyle as n } from "./utils.js";
import { extractStyleFromTheme as o } from "../helpers/theme.js";
const a = {
  fontSize: !0,
  fontWeight: !0
}, h = r.span.withConfig({
  shouldForwardProp: (t, e) => !a[t] && e(t)
})`
  ${i}
  ${n}

  // These properties need to come after {variantStyle}, because they might
  // overwrite a variant attribute
  font-weight: ${({ theme: t, fontWeight: e }) => o(t.fontWeights, e, void 0)};
  font-size: ${({ theme: t, fontSize: e }) => o(t.fontSizes, e, void 0)};
  line-height: ${({ theme: t, lineHeight: e }) => o(t.lineHeights, e, e)};
  color: ${({ theme: t, textColor: e }) => t.colors[e || "neutral800"]};
  text-align: ${({ textAlign: t }) => t};
  text-decoration: ${({ textDecoration: t }) => t};
  text-transform: ${({ textTransform: t }) => t};
`;
export {
  h as Typography
};
