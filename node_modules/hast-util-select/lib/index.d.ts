/**
 * Check that the given `node` matches `selector`.
 *
 * This only checks the element itself, not the surrounding tree.
 * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are
 * selectors like `:first-child`, etc.
 * This only checks that the given element matches the selector.
 *
 * @param {string} selector
 *   CSS selector, such as (`h1`, `a, b`).
 * @param {Node | null | undefined} [node]
 *   Node that might match `selector`, should be an element.
 * @param {Space | null | undefined} [space='html']
 *   Name of namespace (`'svg'` or `'html'`).
 * @returns {boolean}
 *   Whether `node` matches `selector`.
 */
export function matches(
  selector: string,
  node?: Node | null | undefined,
  space?: Space | null | undefined
): boolean
/**
 * Select the first element that matches `selector` in the given `tree`.
 * Searches the tree in *preorder*.
 *
 * @param {string} selector
 *   CSS selector, such as (`h1`, `a, b`).
 * @param {Node | null | undefined} [tree]
 *   Tree to search.
 * @param {Space | null | undefined} [space='html']
 *   Name of namespace (`'svg'` or `'html'`).
 * @returns {Element | null}
 *   First element in `tree` that matches `selector` or `null` if nothing is
 *   found.
 *   This could be `tree` itself.
 */
export function select(
  selector: string,
  tree?: Node | null | undefined,
  space?: Space | null | undefined
): Element | null
/**
 * Select all elements that match `selector` in the given `tree`.
 * Searches the tree in *preorder*.
 *
 * @param {string} selector
 *   CSS selector, such as (`h1`, `a, b`).
 * @param {Node | null | undefined} [tree]
 *   Tree to search.
 * @param {Space | null | undefined} [space='html']
 *   Name of namespace (`'svg'` or `'html'`).
 * @returns {Array<Element>}
 *   Elements in `tree` that match `selector`.
 *   This could include `tree` itself.
 */
export function selectAll(
  selector: string,
  tree?: Node | null | undefined,
  space?: Space | null | undefined
): Array<Element>
export type Element = import('./types.js').Element
export type Node = import('./types.js').Node
export type Space = import('./types.js').Space
export type SelectState = import('./types.js').SelectState
