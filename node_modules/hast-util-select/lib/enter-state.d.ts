/**
 * Enter a node.
 *
 * The caller is responsible for calling the return value `exit`.
 *
 * @param {SelectState} state
 *   Current state.
 *
 *   Will be mutated: `exit` undos the changes.
 * @param {Node} node
 *   Node to enter.
 * @returns {() => void}
 *   Call to exit.
 */
export function enterState(state: SelectState, node: Node): () => void
export type SelectState = import('./types.js').SelectState
export type Node = import('./types.js').Node
export type ElementChild = import('./types.js').ElementChild
export type Direction = import('./types.js').Direction
export type Visitor =
  import('unist-util-visit/complex-types.js').Visitor<ElementChild>
