"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexMetaStatusToJSON = exports.IndexMetaStatusFromJSONTyped = exports.IndexMetaStatusFromJSON = exports.instanceOfIndexMetaStatus = exports.IndexMetaStatusStateEnum = void 0;
var runtime_1 = require("../runtime");
/**
 * @export
 */
exports.IndexMetaStatusStateEnum = {
    Initializing: 'Initializing',
    ScalingUp: 'ScalingUp',
    ScalingDown: 'ScalingDown',
    Terminating: 'Terminating',
    Ready: 'Ready'
};
/**
 * Check if a given object implements the IndexMetaStatus interface.
 */
function instanceOfIndexMetaStatus(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfIndexMetaStatus = instanceOfIndexMetaStatus;
function IndexMetaStatusFromJSON(json) {
    return IndexMetaStatusFromJSONTyped(json, false);
}
exports.IndexMetaStatusFromJSON = IndexMetaStatusFromJSON;
function IndexMetaStatusFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'ready': !(0, runtime_1.exists)(json, 'ready') ? undefined : json['ready'],
        'state': !(0, runtime_1.exists)(json, 'state') ? undefined : json['state'],
    };
}
exports.IndexMetaStatusFromJSONTyped = IndexMetaStatusFromJSONTyped;
function IndexMetaStatusToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ready': value.ready,
        'state': value.state,
    };
}
exports.IndexMetaStatusToJSON = IndexMetaStatusToJSON;
//# sourceMappingURL=IndexMetaStatus.js.map