"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollectionMetaToJSON = exports.CollectionMetaFromJSONTyped = exports.CollectionMetaFromJSON = exports.instanceOfCollectionMeta = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CollectionMeta interface.
 */
function instanceOfCollectionMeta(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfCollectionMeta = instanceOfCollectionMeta;
function CollectionMetaFromJSON(json) {
    return CollectionMetaFromJSONTyped(json, false);
}
exports.CollectionMetaFromJSON = CollectionMetaFromJSON;
function CollectionMetaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'size': !(0, runtime_1.exists)(json, 'size') ? undefined : json['size'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
    };
}
exports.CollectionMetaFromJSONTyped = CollectionMetaFromJSONTyped;
function CollectionMetaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'size': value.size,
        'status': value.status,
    };
}
exports.CollectionMetaToJSON = CollectionMetaToJSON;
//# sourceMappingURL=CollectionMeta.js.map